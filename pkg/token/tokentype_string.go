// Code generated by "stringer -type=TokenType"; DO NOT EDIT.

package token

import "strconv"

func _() {
	// An "invalid array index" compiler error signifies that the constant values have changed.
	// Re-run the stringer command to generate them again.
	var x [1]struct{}
	_ = x[ILLEGAL-0]
	_ = x[EOF-1]
	_ = x[IDENT-2]
	_ = x[INT-3]
	_ = x[STRING-4]
	_ = x[ASSIGN-5]
	_ = x[PLUS-6]
	_ = x[MINUS-7]
	_ = x[BANG-8]
	_ = x[ASTERISK-9]
	_ = x[SLASH-10]
	_ = x[EQ-11]
	_ = x[NOT_EQ-12]
	_ = x[LT-13]
	_ = x[GT-14]
	_ = x[COMMA-15]
	_ = x[DOT-16]
	_ = x[SEMICOLON-17]
	_ = x[COLON-18]
	_ = x[LPAREN-19]
	_ = x[RPAREN-20]
	_ = x[LBRACE-21]
	_ = x[RBRACE-22]
	_ = x[LBRACKET-23]
	_ = x[RBRACKET-24]
	_ = x[FUNCTION-25]
	_ = x[LET-26]
	_ = x[TRUE-27]
	_ = x[FALSE-28]
	_ = x[IF-29]
	_ = x[ELSE-30]
	_ = x[RETURN-31]
}

const _TokenType_name = "ILLEGALEOFIDENTINTSTRINGASSIGNPLUSMINUSBANGASTERISKSLASHEQNOT_EQLTGTCOMMADOTSEMICOLONCOLONLPARENRPARENLBRACERBRACELBRACKETRBRACKETFUNCTIONLETTRUEFALSEIFELSERETURN"

var _TokenType_index = [...]uint8{0, 7, 10, 15, 18, 24, 30, 34, 39, 43, 51, 56, 58, 64, 66, 68, 73, 76, 85, 90, 96, 102, 108, 114, 122, 130, 138, 141, 145, 150, 152, 156, 162}

func (i TokenType) String() string {
	if i < 0 || i >= TokenType(len(_TokenType_index)-1) {
		return "TokenType(" + strconv.FormatInt(int64(i), 10) + ")"
	}
	return _TokenType_name[_TokenType_index[i]:_TokenType_index[i+1]]
}
